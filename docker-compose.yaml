services:
  message-broker:
    image: rabbitmq:3-management
    ports:
      - "${MESSAGE_BROKER_PORT}:15672"
      - "${MESSAGE_BROKER_COMMUNICATION_PORT}:5672"
    volumes:
      - ./infrastructure/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""

  auth-db:
    image: postgres:15
    env_file:
      - ./env/auth-db/auth-db.env
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./infrastructure/sql/auth-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${AUTH_DB_PORT}:5432"

  workshop-db:
    image: postgres:15
    env_file:
      - ./env/workshop-db/workshop-db.env
    volumes:
      - workshop-db-data:/var/lib/postgresql/data
      - ./infrastructure/sql/workshop-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${WORKSHOP_DB_PORT}:5432"

  report-db:
    image: mongo:latest
    ports:
      - "${REPORT_DB_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret123
    volumes:
      - ./infrastructure/mongodb:/docker-entrypoint-initdb.d 
      - report-db-data:/data/db

  auth-service:
    depends_on:
      - auth-db
    build:
      context: .
      dockerfile: auth-service/AuthService/Dockerfile
    env_file:
      - ./env/auth-service/auth.prod.env
    environment:
      - ASPNETCORE_URLS=http://+:${AUTH_SERVICE_PORT}
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["/wait-for-it.sh", "auth-db", "5432", "--", "dotnet", "AuthService.dll"]

  workshop-service:
    depends_on:
      - auth-service
      - message-broker
      - workshop-db
    build:
      context: .
      dockerfile: workshop-service/WorkshopService/Dockerfile
    env_file:
      ./env/workshop-service/workshop.prod.env
    environment:
      - ASPNETCORE_URLS=http://+:${WORKSHOP_SERVICE_PORT}
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    ports:
      - "${WORKSHOP_SERVICE_PORT}:${WORKSHOP_SERVICE_PORT}"
    entrypoint: 
        - /bin/bash
        - -c
        - |
          /wait-for-it.sh workshop-db 5432 -- \
          && /wait-for-it.sh message-broker 5672 -- \
          && /wait-for-it.sh auth-service ${AUTH_SERVICE_PORT} -- \
          && dotnet WorkshopService.dll

  report-service:
    depends_on:
      - message-broker
      - report-db
    build:
      context: .
      dockerfile: report-service/ReportService/Dockerfile
    env_file:
      ./env/report-service/report.prod.env
    environment:
      - ASPNETCORE_URLS=http://+:${REPORT_SERVICE_PORT}
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    ports:
      - "${REPORT_SERVICE_PORT}:${REPORT_SERVICE_PORT}"
    entrypoint: 
        - /bin/bash
        - -c
        - |
          /wait-for-it.sh report-db ${REPORT_DB_PORT} -- \
          && /wait-for-it.sh message-broker 5672 -- \
          && dotnet ReportService.dll



volumes:
  auth-db-data:
  workshop-db-data:
  report-db-data:
  rabbitmq-data:
